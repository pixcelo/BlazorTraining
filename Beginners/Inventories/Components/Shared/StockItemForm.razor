@using Inventories.Components.Shared
@using Inventories.Models

<EditForm Model="this.stockItem" OnValidSubmit="OnOkAsync">
    <DataAnnotationsValidator />
    <div>
        品名 <input class="form-control" type="text" @bind="stockItem.Name" />
    </div>
    <div>
        ロット番号 <input class="form-control" type="text" @bind="stockItem.LotNumber" />
    </div>
    <div>
        数量 <input class="form-control" type="number" @bind="stockItem.Quantity" />
    </div>
    <div>
        入庫日 <input class="form-control" type="date" @bind="stockItem.ArrivalDate" />
    </div>

    <ValidationSummary />
    <button class="btn btn-primary">更新</button>
    <button class="btn btn-primary" @onclick="OnCancelAsync">キャンセル</button>
</EditForm>

@code {
    [Parameter]
    public StockItems stockItem { get; set; } = new StockItems();

    // このフォームコンポーネントは追加・編集で共通で使用する
    // ここに固有の処理を書くのではなく、親にイベント情報を伝達させる
    [Parameter]
    public EventCallback<StockItems> OnOk { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private async void OnOkAsync()
    {
        // 親コンポーネント側のメソッドを呼び出す
        await this.OnOk.InvokeAsync(this.stockItem);        
    }

    private async void OnCancelAsync()
    {
        await this.OnCancel.InvokeAsync();
    }
}