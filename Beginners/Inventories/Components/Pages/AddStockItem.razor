@page "/inventory/add"
@rendermode InteractiveServer
@using Inventories.Data
@using Inventories.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<InventoryDbContext> DbContextFactory
@inject NavigationManager NavigationManager

<h3>在庫品　追加</h3>

<!-- 子コンポーネントからイベントの発火を受け取り、親コンポーネントのメソッドを実行する -->
<StockItemForm OnOk="OnOkAsync" OnCancel="OnCancel" />

@code {
    /// <summary>
    /// 在庫を追加する
    /// </summary>
    /// <returns></returns>
    private async Task OnOkAsync(StockItems newStockItem)
    {
        await using var dbContext = await this.DbContextFactory.CreateDbContextAsync();
        await dbContext.StockItems.AddAsync(newStockItem);
        await dbContext.SaveChangesAsync();

        /// 在庫を追加した後、在庫一覧画面に戻る処理は、NavigationManagerをDIして実現する
        this.NavigationManager.NavigateTo("./inventory");
    }

    /// <summary>
    /// キャンセル（一覧画面に戻る）
    /// </summary>
    private void OnCancel()
    {
        this.NavigationManager.NavigateTo("./inventory");
    }
}
