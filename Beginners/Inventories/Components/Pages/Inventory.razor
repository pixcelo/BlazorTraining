@page "/inventory"
@rendermode InteractiveServer
@using Inventories.Data
@using Inventories.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<InventoryDbContext> DbContextFactory

<h3>在庫品　一覧</h3>

<table class="table">
    <tbody>
        @foreach (var stockItem in this.stockItems)
        {
            <tr @key="stockItem.Id">
                <!-- ＠keyはBlazorエンジン側に列挙される行を一意に識別するための値 -->
                <td>@stockItem.Name</td>
                <td>@stockItem.LotNumber</td>
                <td>@stockItem.Quantity</td>
                <td>@stockItem.ArrivalDate.ToShortDateString()</td>
                <td>
                    <a href="./inventory/edit/@stockItem.Id">編集</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a href="./inventory/add">在庫品の追加</a>
</div>

@code {
    private List<StockItems> stockItems = new List<StockItems>();

    /// <summary>
    /// 初期化処理
    /// </summary>
    /// <returns></returns>
    /// <remarks>
    /// OnInitializedAsyncをオーバーライドして、ページが初期化されるときにDIしたコンテキストを使ってデータを取得
    /// </remarks>
    protected override async Task OnInitializedAsync()
    {
        await using var dbContext = await this.DbContextFactory.CreateDbContextAsync();
        this.stockItems = await dbContext.StockItems.ToListAsync();
    }    
}